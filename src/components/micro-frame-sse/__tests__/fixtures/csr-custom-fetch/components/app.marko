class {
  onCreate() {
    this.state = { mounted: false };
  }
  onMount() {
    this.state.mounted = true;
  }
}

<if(state.mounted)>
  <micro-frame-sse src="embed" name="test" fetch() {
    return new Promise(resolve => {
      const stream = new ReadableStream({
        start(controller) {
          const encoder = new TextEncoder();
          controller.enqueue(encoder.encode('id: slot_1\n'));
          controller.enqueue(encoder.encode('data: costom fetch for slot_1\n\n'));
          controller.close();
        }
      });
      resolve({ ok: true, body: stream });
    });
  }  read(e) { return [e.lastEventId, e.data] } />
  <micro-frame-slot from="test" slotId="slot_1">
    <@catch|err|>
      Slot_1 Error: ${err.message}
    </@catch>
  </micro-frame-slot>
  <micro-frame-slot from="test" slotId="slot_2">
    <@catch|err|>
      Slot_2 Error: ${err.message}
    </@catch>
  </micro-frame-slot>
</if>
