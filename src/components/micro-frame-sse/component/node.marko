import NodeEventSource from "./NodeEventSource";
import { StreamSource } from "../../../StreamClass";

$ {
  let streamSource;
  const name = input.name;
  if (out.global.micro_frame_sse instanceof Map) {
    if (out.global.micro_frame_sse.has(name)) {
      throw new Error(`micro-frame-sse ${name} already exists.`);
    } else {
      streamSource = out.global.micro_frame_sse.get(name)
    }
  } else {
    const sourceMap = new Map();
    streamSource = new StreamSource(input.read);
    sourceMap.set(name, streamSource);
    out.global.micro_frame_sse = sourceMap;
  }

  const sse = new NodeEventSource(input.src, {
    method: input.method || 'get',
    body: JSON.stringify(input.body),
    strictSSL: process.env.NODE_TLS_REJECT_UNAUTHORIZED !== "0",
    headers: input.headers
  });

  sse.onmessage = (e) => {
    streamSource.read(e, { closeAfterRead: true });
  }

  sse.onerror = () => {
    streamSource.close();
  }
}
